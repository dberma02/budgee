Big Picture Goal:
  Make categories editable from table

Tasks:
  Expand API to have update.

  Quick reformat of table, so all fields visable and in good order

  Expand API to have a "categories" model (for the possible category choices that the user can enter)

  Create categories endpoint, so that the categories selected on angular website can be saved to database

  Create Angular form to call categories endpoint so that user can enter the categories he/she would like to use to sort transactions

  Create dropdown form within table, so that user can select appropriate category for each transaction
    -Update button, so that when all categories are selected, the categories for all transactions are updated on server

STAGE 1:
  Scaled down version to get up quickly:
    -No "categories" model in rails
    -Forms in table not drop down, user input text directly


Big Picture Goal:
  Create ability to upload csv data to the Rails server

Tasks:
  Figure out if best to do in Angular, or directly to server with Rails  
    -All of the data cleaning functions that you wrote, you would be able to keep.
    -Stub Data wouldn't change
    -Becuase you are planning on using CSV input (plaintext), Uploading to the server shouldn't be too bad. Can just grab that file from HTML input, send its contents as data in the JSON.
    -Then in Rails you would have to change things so that, rather than getting each field from parameter, figure out how to parse the plaintext CSV string into array of transactions.


MISC:
  Getting errors in API when "attempting to serialize single object as collection" aka messes up if only one transaction (even in date range??)
  Add constants files to API


